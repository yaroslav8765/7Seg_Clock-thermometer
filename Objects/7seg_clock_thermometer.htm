<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\7seg_clock_thermometer.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\7seg_clock_thermometer.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Wed Jan 22 14:01:01 2025
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; RTC_GetDateTime &rArr; __aeabi_uldivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2d]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[29]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2e]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from main.o(.text.RTC_IRQHandler) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2a]">SPI1_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[31]">SystemInit</a> from system_stm32f10x.o(.text.SystemInit) referenced from startup_stm32f10x_ld.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from main.o(.text.TIM2_IRQHandler) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from main.o(.text.TIM3_IRQHandler) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[2f]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_ld.o(.text) referenced from startup_stm32f10x_ld.o(RESET)
 <LI><a href="#[32]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_ld.o(.text)
 <LI><a href="#[30]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[32]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(.text)
</UL>
<P><STRONG><a name="[6c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[70]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[71]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_ld.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[72]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[73]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[74]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>GPIO_Init</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, stm32f10x_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_buttons
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSevenSegmentDisplayPins
</UL>

<P><STRONG><a name="[57]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debounceButton
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePin
</UL>

<P><STRONG><a name="[3b]"></a>GPIO_ResetBits</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePin
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndication
</UL>

<P><STRONG><a name="[3c]"></a>GPIO_SetBits</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePin
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndication
</UL>

<P><STRONG><a name="[39]"></a>GPIO_TogglePin</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(.text.GPIO_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_TogglePin &rArr; GPIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>GPIO_WriteBit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text.GPIO_WriteBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_nothing
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_o
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_minus
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_number_with_dot
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_number
</UL>

<P><STRONG><a name="[4d]"></a>NVIC_Init</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, misc.o(.text.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[69]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, misc.o(.text.NVIC_PriorityGroupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[47]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f10x_pwr.o(.text.PWR_BackupAccessCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[46]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[5e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_buttons
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSevenSegmentDisplayPins
</UL>

<P><STRONG><a name="[48]"></a>RCC_LSEConfig</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text.RCC_LSEConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_LSEConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[4a]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f10x_rcc.o(.text.RCC_RTCCLKCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_RTCCLKCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[49]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f10x_rcc.o(.text.RCC_RTCCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_RTCCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[3f]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text.RTC_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text.RTC_EnterConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[43]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text.RTC_ExitConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[63]"></a>RTC_GetCounter</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, stm32f10x_rtc.o(.text.RTC_GetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>RTC_GetDateTime</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, rtc.o(.text.RTC_GetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RTC_GetDateTime &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>RTC_GetITStatus</STRONG> (Thumb, 86 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text.RTC_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>RTC_GetRTC_Counter</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, rtc.o(.text.RTC_GetRTC_Counter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetRTC_Counter
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(.text.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_IRQHandler &rArr; GPIO_TogglePin &rArr; GPIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePin
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>RTC_ITConfig</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text.RTC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[41]"></a>RTC_SetCounter</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32f10x_rtc.o(.text.RTC_SetCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>RTC_SetPrescaler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f10x_rtc.o(.text.RTC_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[40]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text.RTC_WaitForLastTask))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[4b]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text.RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
</UL>

<P><STRONG><a name="[45]"></a>RTC_init</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, rtc.o(.text.RTC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RTC_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>SystemInit</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 534 bytes, Stack size 32 bytes, main.o(.text.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM2_IRQHandler &rArr; dynamicIndicationForTemperature &rArr; write_o &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndication
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeTo7SegDisplay
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debounceButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 794 bytes, Stack size 24 bytes, main.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM3_IRQHandler &rArr; RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetRTC_Counter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_ld.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text.TIM_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>TIM_Cmd</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text.TIM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[66]"></a>TIM_ITConfig</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[65]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 322 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[64]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, stm32f10x_tim.o(.text.TIM_TimeBaseStructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TIM_TimeBaseStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[6a]"></a>convBinToDec</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, sevensegmentdisplay.o(.text.convBinToDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = convBinToDec
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeTo7SegDisplay
</UL>

<P><STRONG><a name="[51]"></a>debounceButton</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, buttondebounce.o(.text.debounceButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = debounceButton &rArr; GPIO_ReadInputDataBit
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>delay_ms</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, rtc.o(.text.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>dynamicIndication</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, sevensegmentdisplay.o(.text.dynamicIndication))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dynamicIndication &rArr; write_number &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_number
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>dynamicIndicationForTemperature</STRONG> (Thumb, 556 bytes, Stack size 32 bytes, sevensegmentdisplay.o(.text.dynamicIndicationForTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dynamicIndicationForTemperature &rArr; write_o &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_nothing
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_o
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_minus
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_number_with_dot
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_number
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>initSevenSegmentDisplayPins</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, sevensegmentdisplay.o(.text.initSevenSegmentDisplayPins))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = initSevenSegmentDisplayPins &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>init_buttons</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, main.o(.text.init_buttons))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_buttons &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; RTC_GetDateTime &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetRTC_Counter
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_buttons
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSevenSegmentDisplayPins
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[60]"></a>tim2Init</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, main.o(.text.tim2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tim2Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>tim3init</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, main.o(.text.tim3init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tim3init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>writeTo7SegDisplay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sevensegmentdisplay.o(.text.writeTo7SegDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = writeTo7SegDisplay &rArr; convBinToDec
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convBinToDec
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>write_minus</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, sevensegmentdisplay.o(.text.write_minus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = write_minus &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
</UL>

<P><STRONG><a name="[5c]"></a>write_nothing</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, sevensegmentdisplay.o(.text.write_nothing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = write_nothing &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
</UL>

<P><STRONG><a name="[58]"></a>write_number</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, sevensegmentdisplay.o(.text.write_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = write_number &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndication
</UL>

<P><STRONG><a name="[59]"></a>write_number_with_dot</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, sevensegmentdisplay.o(.text.write_number_with_dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = write_number_with_dot &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
</UL>

<P><STRONG><a name="[5b]"></a>write_o</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, sevensegmentdisplay.o(.text.write_o))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = write_o &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dynamicIndicationForTemperature
</UL>

<P><STRONG><a name="[75]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[76]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[77]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, main.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim3init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2Init
</UL>

<P><STRONG><a name="[4f]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[50]"></a>SetSysClockTo72</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, system_stm32f10x.o(.text.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
